"""
Django settings for AivleChat project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

import openai

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
file_path = os.path.join(BASE_DIR,'secret_key.txt')

# 파일 열기 및 내용 읽기
try:
    with open(file_path, 'r', encoding='utf-8') as file:
        secret_key = file.read()
except FileNotFoundError:
    print('파일을 찾을 수 없습니다.')

SECRET_KEY = secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'ChatSystem',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rangefilter',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'AivleChat.middleware.RedirectExceptionMiddleware',  # 에러 발생시 홈으로 리다이렉트
]

ROOT_URLCONF = 'AivleChat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/ 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AivleChat.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'ko-kr'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True

# MEDIA File
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 사용자 모델
AUTH_USER_MODEL = 'ChatSystem.User'  # yourapp은 해당 앱의 이름으로 변경

# 세션 엔진 설정
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # 기본 설정, 세션 데이터를 데이터베이스에 저장

# 세션 쿠키의 이름
SESSION_COOKIE_NAME = 'sessionid'  # 기본값이 'sessionid'입니다

# 세션 쿠키의 유효 시간 (초 단위)
SESSION_COOKIE_AGE = 3600  # 2분 (기본값)

# 세션 쿠키가 HTTPS를 통해서만 전송되도록 설정
SESSION_COOKIE_SECURE = False  # 개발 환경에서는 False, 프로덕션에서는 True로 설정

# 세션 쿠키가 HttpOnly 속성을 가지도록 설정 (JavaScript에서 접근할 수 없음)
SESSION_COOKIE_HTTPONLY = True

# 세션이 닫혔을 때 세션을 유지할지 여부
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # 기본값은 False, True로 설정하면 브라우저를 닫을 때 세션이 만료됩니다

# 세션을 사용하지 않는 경우에도 세션을 저장할지 여부
SESSION_SAVE_EVERY_REQUEST = False  # 기본값은 False, True로 설정하면 매 요청마다 세션이 저장됩니다

# 세션 만료 시간
SESSION_COOKIE_AGE = 3600  # 2분 (기본값)

LOGIN_URL = 'ChatSystem:login'

# API Key
file_path = os.path.join(BASE_DIR,'open_api_key.txt')

# 파일 열기 및 내용 읽기
try:
    with open(file_path, 'r', encoding='utf-8') as file:
        api_key = file.read()
except FileNotFoundError:
    print('파일을 찾을 수 없습니다.')

os.environ['OPENAI_API_KEY'] = api_key
openai.api_key = os.getenv('OPENAI_API_KEY')